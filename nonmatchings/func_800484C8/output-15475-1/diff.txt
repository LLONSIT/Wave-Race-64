--- before
+++ after
@@ -963,11 +963,13 @@
   f32 temp_f14;
   f32 temp_f16;
   f32 temp_f18;
+  MF *new_var3;
   f32 temp_f12;
   f32 temp_f2;
   f32 temp_f22;
   f32 temp_f20;
   f32 temp_f24;
+  float new_var2;
   f32 temp_len;
   f32 cross1_x;
   f32 cross1_y;
@@ -1013,24 +1015,29 @@
   cross2_y = (arg9 * sp48) - (argA * sp50);
   cross2_z = (arg8 * temp_f12) - (arg6 * sp48);
   temp_len = ((cross1_x * cross1_x) + (cross1_y * cross1_y)) + (cross1_z * cross1_z);
-  if (temp_len <= 0.0f)
+  temp_f24 = temp_len;
+  if (temp_f24 <= 0.0f)
   {
     return;
   }
   cross2_x = new_var;
   temp_len = sqrtf(temp_len);
-  temp_f2 = 1.0f / temp_len;
+  temp_f2 = 1.0 / temp_len;
   temp_f12 = cross1_y * temp_f2;
+ goto dummy_label_292579; dummy_label_292579: ;
   sp3C = cross1_x * temp_f2;
   sp44 = cross1_z * temp_f2;
   arg1->xy = temp_f12;
   arg1->yy = sp3C;
   arg1->zy = sp44;
+  new_var2 = new_var * cross1_x;
   temp_f18 = cross1_z;
   cross3_x = (new_var * temp_f18) - (temp_f18 * cross1_y);
   cross3_y = (temp_f18 * cross1_x) - (temp_f14 * cross1_z);
-  cross3_z = (temp_f14 * cross1_y) - (new_var * cross1_x);
+  cross3_z = (temp_f14 * cross1_y) - new_var2;
+ do { } while (0);
   up_x = (new_var * cross2_z) - (temp_f18 * cross2_y);
+ do { } while (0);
   cross1_y = (arg7 * temp_f20) - (argA * temp_f24);
   up_y = (temp_f18 * cross2_x) - (temp_f14 * cross2_z);
   up_z = (temp_f14 * cross2_y) - (cross2_x * cross2_x);
@@ -1051,8 +1058,9 @@
   arg1->wx = 0.0f;
   arg1->wy = 0.0f;
   arg1->wz = 0.0f;
-  arg1->ww = 1.0f;
-  arg1->xw = final_trans;
+  new_var3 = arg1;
+  new_var3->ww = 1.0f;
+  new_var3->xw = final_trans;
   func_80047EE0(arg1, arg0);
 }
 
