--- before
+++ after
@@ -954,10 +954,10 @@
   f32 sp5C;
   f32 sp58;
   f32 sp54;
+  f32 sp44;
   f32 sp50;
   f32 sp4C;
   f32 sp48;
-  f32 sp44;
   f32 sp3C;
   f32 sp30;
   f32 temp_f14;
@@ -1008,6 +1008,9 @@
   arg1->zx = sp50;
   sp3C = (((-arg2) * sp48) + (arg3 * temp_f12)) - (arg4 * sp50);
   cross1_x = (argA * temp_f24) - (arg7 * temp_f22);
+  if (temp_f16)
+  {
+  }
   cross1_z = (arg8 * temp_f22) - (arg6 * temp_f20);
   cross2_x = (argA * sp50) - (arg9 * temp_f12);
   cross2_y = (arg9 * sp48) - (argA * sp50);
@@ -1022,10 +1025,9 @@
   temp_f2 = 1.0f / temp_len;
   temp_f12 = cross1_y * temp_f2;
   sp3C = cross1_x * temp_f2;
-  sp44 = cross1_z * temp_f2;
+  sp44 = (arg1->zy = cross1_z * temp_f2);
   arg1->xy = temp_f12;
   arg1->yy = sp3C;
-  arg1->zy = sp44;
   temp_f18 = cross1_z;
   cross3_x = (new_var * temp_f18) - (temp_f18 * cross1_y);
   cross3_y = (temp_f18 * cross1_x) - (temp_f14 * cross1_z);
@@ -1049,7 +1051,7 @@
   arg1->zz = temp_f16;
   final_trans = (((-arg2) * temp_f14) + (arg3 * temp_f12)) - (arg4 * temp_f16);
   arg1->wx = 0.0f;
-  arg1->wy = 0.0f;
+  arg1->wy = (temp_f20 * temp_f2) * 0.0f;
   arg1->wz = 0.0f;
   arg1->ww = 1.0f;
   arg1->xw = final_trans;
