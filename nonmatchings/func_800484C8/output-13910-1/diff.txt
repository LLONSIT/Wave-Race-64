--- before
+++ after
@@ -955,6 +955,7 @@
   f32 sp58;
   f32 sp54;
   f32 sp50;
+  float new_var2;
   f32 sp4C;
   f32 sp48;
   f32 sp44;
@@ -985,7 +986,7 @@
   f32 final_trans;
   temp_f14 = arg2 - arg8;
   temp_f16 = arg3 - arg6;
-  temp_f18 = arg4 - arg9;
+  temp_f18 = (arg4 - arg9) * 1.0f;
   temp_len = ((temp_f14 * temp_f14) + (temp_f16 * temp_f16)) + (temp_f18 * temp_f18);
   new_var = temp_f16;
   if (temp_len <= 0.0f)
@@ -1011,6 +1012,7 @@
   cross1_x = (argA * temp_f24) - (arg7 * temp_f22);
   up_y = new_var * cross1_x;
   cross1_z = (arg8 * temp_f22) - (arg6 * temp_f20);
+  new_var2 = 1.0f;
   cross2_x = (argA * sp50) - (arg9 * temp_f12);
   cross2_y = (arg9 * sp48) - (argA * sp50);
   cross2_z = (arg8 * temp_f12) - (arg6 * sp48);
@@ -1043,7 +1045,7 @@
     return;
   }
   temp_len = sqrtf(temp_len);
-  temp_f2 = 1.0f / temp_len;
+  temp_f2 = new_var2 / temp_len;
   temp_f12 = cross3_y * temp_f2;
   temp_f14 = cross3_x * temp_f2;
   temp_f16 = cross3_z * temp_f2;
@@ -1056,7 +1058,7 @@
   sp44--;
   arg1->wy = 0.0f;
   arg1->wz = 0.0f;
-  arg1->ww = 1.0f;
+  arg1->ww = new_var2;
   arg1->xw = final_trans;
   func_80047EE0(arg1, arg0);
 }
