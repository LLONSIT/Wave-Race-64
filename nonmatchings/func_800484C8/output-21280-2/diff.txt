--- before
+++ after
@@ -960,6 +960,7 @@
   f32 sp4C;
   f32 sp48;
   f32 sp44;
+  float new_var2;
   f32 sp3C;
   f32 sp30;
   f32 temp_f14;
@@ -970,6 +971,7 @@
   f32 temp_f20;
   f32 temp_f22;
   f32 temp_f24;
+  f32 new_var;
   f32 temp_len;
   f32 cross1_x;
   f32 cross1_y;
@@ -996,18 +998,17 @@
   sp5C = temp_f16;
   sp58 = temp_f18;
   temp_len = sqrtf(temp_len);
-  temp_f2 = 1.0f / temp_len;
+  temp_f2 = 1.f / temp_len;
   temp_f22 = temp_f16;
   temp_f20 = temp_f14;
   temp_f24 = temp_f18;
-  temp_f12 = temp_f22 * temp_f2;
-  sp48 = temp_f20 * temp_f2;
-  sp50 = temp_f24 * temp_f2;
+ temp_f12 = temp_f22 * temp_f2; sp48 = temp_f20 * temp_f2; sp50 = temp_f24 * temp_f2;
   arg1->yx = temp_f12;
   arg1->xx = sp48;
   arg1->zx = sp50;
   sp3C = (((-arg2) * sp48) + (arg3 * temp_f12)) - (arg4 * sp50);
-  cross1_x = (argA * temp_f24) - (arg7 * temp_f22);
+  cross1_x = temp_f22;
+  cross1_x = (argA * temp_f24) - (arg7 * cross1_x);
   cross1_y = (arg7 * temp_f20) - (argA * temp_f24);
   cross1_z = (arg8 * temp_f22) - (arg6 * temp_f20);
   cross2_x = (argA * sp50) - (arg9 * temp_f12);
@@ -1026,12 +1027,13 @@
   arg1->xy = temp_f12;
   arg1->yy = sp3C;
   arg1->zy = sp44;
-  cross3_x = (temp_f16 * cross1_z) - (temp_f18 * cross1_y);
+  new_var = temp_f16;
+  cross3_x = (new_var * cross1_z) - (temp_f18 * cross1_y);
   cross3_y = (temp_f18 * cross1_x) - (temp_f14 * cross1_z);
-  cross3_z = (temp_f14 * cross1_y) - (temp_f16 * cross1_x);
-  up_x = (temp_f16 * cross2_z) - (temp_f18 * cross2_y);
+  cross3_z = (temp_f14 * cross1_y) - (new_var * cross1_x);
+  up_x = (new_var * cross2_z) - (temp_f18 * cross2_y);
   up_y = (temp_f18 * cross2_x) - (temp_f14 * cross2_z);
-  up_z = (temp_f14 * cross2_y) - (temp_f16 * cross2_x);
+  up_z = ((temp_f14 * 1.0f) * cross2_y) - (new_var * cross2_x);
   temp_len = ((up_x * up_x) + (up_y * up_y)) + (up_z * up_z);
   if (temp_len <= 0.0f)
   {
@@ -1039,16 +1041,10 @@
   }
   temp_len = sqrtf(temp_len);
   temp_f2 = 1.0f / temp_len;
-  temp_f12 = cross3_y * temp_f2;
-  temp_f14 = cross3_x * temp_f2;
-  temp_f16 = cross3_z * temp_f2;
-  arg1->xz = temp_f12;
-  arg1->yz = temp_f14;
-  arg1->zz = temp_f16;
-  final_trans = (((-arg2) * temp_f14) + (arg3 * temp_f12)) - (arg4 * temp_f16);
-  arg1->wx = 0.0f;
-  arg1->wy = 0.0f;
-  arg1->wz = 0.0f;
+ temp_f12 = cross3_y * temp_f2; temp_f14 = cross3_x * temp_f2; temp_f16 = cross3_z * temp_f2; arg1->xz = temp_f12; arg1->yz = temp_f14; arg1->zz = temp_f16; new_var2 = 0.0f; final_trans = (((-arg2) * temp_f14) + (arg3 * temp_f12)) - (arg4 * temp_f16);
+  arg1->wx = new_var2;
+  arg1->wy = new_var2;
+  arg1->wz = new_var2;
   arg1->ww = 1.0f;
   arg1->xw = final_trans;
   func_80047EE0(arg1, arg0);
