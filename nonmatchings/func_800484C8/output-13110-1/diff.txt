--- before
+++ after
@@ -972,6 +972,7 @@
   f32 temp_len;
   f32 cross1_x;
   f32 cross1_y;
+  float new_var3;
   f32 cross1_z;
   f32 cross2_x;
   f32 cross2_y;
@@ -1008,7 +1009,8 @@
   arg1->xx = sp48;
   cross2_z = arg3;
   arg1->zx = sp50;
-  sp3C = (((-arg2) * sp48) + (cross2_z * temp_f12)) - (arg4 * sp50);
+  new_var3 = -arg2;
+  sp3C = ((new_var3 * sp48) + (cross2_z * temp_f12)) - (arg4 * sp50);
   cross1_x = (argA * temp_f24) - (arg7 * temp_f22);
   up_y = new_var * cross1_x;
   cross1_z = (arg8 * temp_f22) - (arg6 * temp_f20);
@@ -1025,7 +1027,8 @@
   temp_f2 = 1.0f / temp_len;
   temp_f12 = cross1_y * temp_f2;
   sp3C = cross1_x * temp_f2;
-  sp44 = cross1_z * temp_f2;
+  up_x = cross1_z * temp_f2;
+  sp44 = up_x;
   arg1->xy = temp_f12;
   arg1->yy = sp3C;
   arg1->zy = sp44;
@@ -1035,9 +1038,10 @@
   cross3_z = (temp_f14 * cross1_y) - up_y;
   up_x = (new_var * cross2_z) - (temp_f18 * cross2_y);
   temp_f18 = arg4 - arg9;
+  sp54 = cross2_x * temp_f18;
   sp48 = argA * temp_f24;
   cross1_y = (arg7 * temp_f20) - sp48;
-  up_y = (cross2_x * temp_f18) - (temp_f14 * cross2_z);
+  up_y = sp54 - (temp_f14 * cross2_z);
   up_z = (temp_f14 * cross2_y) - (cross2_x * cross2_x);
   up_y = up_y * up_y;
   temp_len = ((up_x * up_x) + up_y) + (up_z * up_z);
@@ -1053,7 +1057,7 @@
   arg1->xz = temp_f12;
   arg1->yz = temp_f14;
   arg1->zz = temp_f16;
-  final_trans = (((-arg2) * temp_f14) + (cross2_z * temp_f12)) - (arg4 * temp_f16);
+  final_trans = ((new_var3 * temp_f14) + (cross2_z * temp_f12)) - (arg4 * temp_f16);
   arg1->wx = 0.0f;
   sp44++;
   sp44--;
