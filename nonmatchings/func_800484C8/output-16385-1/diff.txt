--- before
+++ after
@@ -1008,12 +1008,11 @@
   arg1->zx = sp50;
   sp3C = (((-arg2) * sp48) + (arg3 * temp_f12)) - (arg4 * sp50);
   cross1_x = (argA * temp_f24) - (arg7 * temp_f22);
-  cross1_y = (arg7 * temp_f20) - (argA * temp_f24);
-  cross1_z = (arg8 * temp_f22) - (arg6 * temp_f20);
+ cross1_y = (arg7 * temp_f20) - (argA * temp_f24); if (!temp_f2) { } cross1_z = (arg8 * temp_f22) - (arg6 * temp_f20);
   cross2_x = (argA * sp50) - (arg9 * temp_f12);
-  cross2_y = (arg9 * sp48) - (argA * sp50);
+  cross2_y = (arg9 * sp48) - (sp50 * argA);
   cross2_z = (arg8 * temp_f12) - (arg6 * sp48);
-  temp_len = ((cross1_x * cross1_x) + (cross1_y * cross1_y)) + (cross1_z * cross1_z);
+  temp_len = ((0, (cross1_x * cross1_x) + (cross1_y * cross1_y))) + (cross1_z * cross1_z);
   if (temp_len <= 0.0f)
   {
     return;
@@ -1032,7 +1031,8 @@
   up_x = (temp_f16 * cross2_z) - (temp_f18 * cross2_y);
   up_y = (temp_f18 * cross2_x) - (temp_f14 * cross2_z);
   up_z = (temp_f14 * cross2_y) - (temp_f16 * cross2_x);
-  temp_len = ((up_x * up_x) + (up_y * up_y)) + (up_z * up_z);
+  temp_f2 = up_y;
+  temp_len = ((up_x * up_x) + (temp_f2 * temp_f2)) + (up_z * up_z);
   if (temp_len <= 0.0f)
   {
     return;
