--- before
+++ after
@@ -952,8 +952,8 @@
 {
   f32 sp60;
   f32 sp5C;
+  f32 sp54;
   f32 sp58;
-  f32 sp54;
   f32 sp50;
   f32 sp4C;
   f32 sp48;
@@ -1012,7 +1012,8 @@
   cross2_x = (argA * sp50) - (arg9 * temp_f12);
   cross2_y = (arg9 * sp48) - (argA * sp50);
   cross2_z = (arg8 * temp_f12) - (arg6 * sp48);
-  temp_len = ((cross1_x * cross1_x) + (cross1_y * cross1_y)) + (cross1_z * cross1_z);
+  temp_f18 = cross1_z;
+  temp_len = ((cross1_x * cross1_x) + (cross1_y * cross1_y)) + (temp_f18 * temp_f18);
   if (temp_len <= 0.0f)
   {
     return;
@@ -1022,13 +1023,13 @@
   temp_f2 = 1.0f / temp_len;
   temp_f12 = cross1_y * temp_f2;
   sp3C = cross1_x * temp_f2;
-  sp44 = cross1_z * temp_f2;
+  sp44 = temp_f18 * temp_f2;
   arg1->xy = temp_f12;
   arg1->yy = sp3C;
   arg1->zy = sp44;
   temp_f18 = cross1_z;
   cross3_x = (new_var * temp_f18) - (temp_f18 * cross1_y);
-  cross3_y = (temp_f18 * cross1_x) - (temp_f14 * cross1_z);
+  cross3_y = (temp_f18 * cross1_x) - (temp_f14 * temp_f18);
   cross3_z = (temp_f14 * cross1_y) - (new_var * cross1_x);
   up_x = (new_var * cross2_z) - (temp_f18 * cross2_y);
   cross1_y = (arg7 * temp_f20) - (argA * temp_f24);
