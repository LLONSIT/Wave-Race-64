--- before
+++ after
@@ -964,6 +964,7 @@
   f32 sp30;
   f32 temp_f14;
   f32 temp_f16;
+  f32 new_var;
   f32 temp_f18;
   f32 temp_f12;
   f32 temp_f2;
@@ -1008,8 +1009,9 @@
   arg1->zx = sp50;
   sp3C = (((-arg2) * sp48) + (arg3 * temp_f12)) - (arg4 * sp50);
   cross1_x = (argA * temp_f24) - (arg7 * temp_f22);
+  new_var = temp_f22;
   cross1_y = (arg7 * temp_f20) - (argA * temp_f24);
-  cross1_z = (arg8 * temp_f22) - (arg6 * temp_f20);
+  cross1_z = (arg8 * new_var) - (arg6 * temp_f20);
   cross2_x = (argA * sp50) - (arg9 * temp_f12);
   cross2_y = (arg9 * sp48) - (argA * sp50);
   cross2_z = (arg8 * temp_f12) - (arg6 * sp48);
@@ -1019,7 +1021,7 @@
     return;
   }
   temp_len = sqrtf(temp_len);
-  temp_f2 = 1.0f / temp_len;
+  temp_f2 = 1.f / temp_len;
   temp_f12 = cross1_y * temp_f2;
   sp3C = cross1_x * temp_f2;
   sp44 = cross1_z * temp_f2;
@@ -1027,13 +1029,12 @@
   arg1->yy = sp3C;
   arg1->zy = sp44;
   cross3_x = (temp_f16 * cross1_z) - (temp_f18 * cross1_y);
-  cross3_y = (temp_f18 * cross1_x) - (temp_f14 * cross1_z);
+  cross3_y = (temp_f12 = temp_f18 * cross1_x) - (temp_f14 * cross1_z);
   cross3_z = (temp_f14 * cross1_y) - (temp_f16 * cross1_x);
   up_x = (temp_f16 * cross2_z) - (temp_f18 * cross2_y);
   up_y = (temp_f18 * cross2_x) - (temp_f14 * cross2_z);
   up_z = (temp_f14 * cross2_y) - (temp_f16 * cross2_x);
   temp_len = ((up_x * up_x) + (up_y * up_y)) + (up_z * up_z);
-  if (temp_len <= 0.0f)
   {
     return;
   }
