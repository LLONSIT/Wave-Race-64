--- before
+++ after
@@ -984,6 +984,7 @@
   f32 up_y;
   f32 up_z;
   f32 final_trans;
+  f32 new_var;
   temp_f14 = arg2 - arg8;
   temp_f16 = arg3 - arg6;
   temp_f18 = arg4 - arg9;
@@ -993,6 +994,9 @@
     return;
   }
   sp60 = temp_f14;
+  if (cross1_y)
+  {
+  }
   sp5C = temp_f16;
   sp58 = temp_f18;
   temp_len = sqrtf(temp_len);
@@ -1031,7 +1035,7 @@
   cross3_z = (temp_f14 * cross1_y) - (temp_f16 * cross1_x);
   up_x = (temp_f16 * cross2_z) - (temp_f18 * cross2_y);
   up_y = (temp_f18 * cross2_x) - (temp_f14 * cross2_z);
-  up_z = (temp_f14 * cross2_y) - (temp_f16 * cross2_x);
+  up_z = (temp_len = temp_f14 * cross2_y) - (temp_f16 * cross2_x);
   temp_len = ((up_x * up_x) + (up_y * up_y)) + (up_z * up_z);
   if (temp_len <= 0.0f)
   {
@@ -1045,7 +1049,8 @@
   arg1->xz = temp_f12;
   arg1->yz = temp_f14;
   arg1->zz = temp_f16;
-  final_trans = (((-arg2) * temp_f14) + (arg3 * temp_f12)) - (arg4 * temp_f16);
+  new_var = temp_f12;
+  final_trans = (((-arg2) * temp_f14) + (arg3 * new_var)) - (arg4 * temp_f16);
   arg1->wx = 0.0f;
   arg1->wy = 0.0f;
   arg1->wz = 0.0f;
