--- before
+++ after
@@ -952,10 +952,10 @@
 void func_800481E0(MF *arg0, u16 *arg1, f32 arg2, f32 arg3, f32 arg4, f32 arg5, f32 arg6, f32 arg7);
 void func_800484C8(MF *arg0, MF *arg1, f32 arg2, f32 arg3, f32 arg4, f32 arg5, f32 arg6, f32 arg7, f32 arg8, f32 arg9, f32 argA)
 {
+  f32 sp54;
   f32 sp60;
   f32 sp5C;
   f32 sp58;
-  f32 sp54;
   f32 sp50;
   f32 sp4C;
   f32 sp48;
@@ -967,7 +967,6 @@
   f32 temp_f18;
   f32 temp_f12;
   f32 temp_f2;
-  f32 temp_f20;
   f32 temp_f22;
   f32 temp_f24;
   f32 temp_len;
@@ -978,6 +977,7 @@
   f32 cross2_y;
   f32 cross2_z;
   f32 cross3_x;
+  f32 temp_f20;
   f32 cross3_y;
   f32 cross3_z;
   f32 up_x;
@@ -987,15 +987,16 @@
   temp_f14 = arg2 - arg8;
   temp_f16 = arg3 - arg6;
   temp_f18 = arg4 - arg9;
-  temp_len = ((temp_f14 * temp_f14) + (temp_f16 * temp_f16)) + (temp_f18 * temp_f18);
+  temp_len = ((cross3_y = temp_f14 * temp_f14) + ((temp_f16 * 1.0f) * temp_f16)) + (temp_f18 * temp_f18);
   if (temp_len <= 0.0f)
   {
     return;
+    cross3_z += 0;
   }
   sp60 = temp_f14;
   sp5C = temp_f16;
   sp58 = temp_f18;
-  temp_len = sqrtf(temp_len);
+  temp_len = (double) sqrtf(temp_len);
   temp_f2 = 1.0f / temp_len;
   temp_f22 = temp_f16;
   temp_f20 = temp_f14;
