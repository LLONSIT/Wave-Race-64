--- before
+++ after
@@ -959,6 +959,7 @@
   f32 sp48;
   f32 sp44;
   f32 sp3C;
+  float new_var2;
   f32 sp30;
   f32 temp_f14;
   f32 temp_f16;
@@ -1000,7 +1001,8 @@
   temp_f20 = temp_f14;
   temp_f24 = temp_f18;
   temp_f12 = temp_f22 * temp_f2;
-  sp48 = temp_f20 * temp_f2;
+  new_var2 = temp_f20 * temp_f2;
+  sp48 = new_var2;
   sp50 = temp_f24 * temp_f2;
   arg1->yx = temp_f12;
   arg1->xx = sp48;
@@ -1031,12 +1033,7 @@
   cross3_x = (new_var * temp_f18) - (temp_f18 * cross1_y);
   cross3_y = (temp_f18 * cross1_x) - (temp_f14 * cross1_z);
   cross3_z = (temp_f14 * cross1_y) - up_y;
-  up_x = (new_var * cross2_z) - (temp_f18 * cross2_y);
-  temp_f18 = arg4 - arg9;
-  sp48 = argA * temp_f24;
-  cross1_y = (arg7 * temp_f20) - sp48;
-  up_y = (temp_f18 * cross2_x) - (temp_f14 * cross2_z);
-  up_z = (temp_f14 * cross2_y) - (cross2_x * cross2_x);
+ up_x = (new_var * cross2_z) - (temp_f18 * cross2_y); sp44 = cross1_z * temp_f2; temp_f18 = arg4 - arg9; sp48 = argA * temp_f24; cross1_y = (arg7 * temp_f20) - sp48; up_y = (temp_f18 * cross2_x) - (temp_f14 * cross2_z); up_z = (temp_f14 * cross2_y) - (cross2_x * cross2_x);
   temp_len = ((up_x * up_x) + (up_y * up_y)) + (up_z * up_z);
   if (temp_len <= 0.0f)
   {
