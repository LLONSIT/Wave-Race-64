--- before
+++ after
@@ -968,6 +968,7 @@
   f32 temp_f2;
   f32 temp_f22;
   f32 temp_f20;
+  f32 new_var4;
   f32 temp_f24;
   f32 temp_len;
   f32 cross1_x;
@@ -981,6 +982,7 @@
   f32 cross3_z;
   f32 up_x;
   f32 up_y;
+  float new_var3;
   f32 up_z;
   f32 new_var;
   f32 final_trans;
@@ -1006,12 +1008,13 @@
   sp50 = temp_f24 * temp_f2;
   arg1->yx = temp_f12;
   arg1->xx = sp48;
+  new_var4 = temp_f22;
   cross2_z = arg3;
   arg1->zx = sp50;
   sp3C = (((-arg2) * sp48) + (cross2_z * temp_f12)) - (arg4 * sp50);
-  cross1_x = (argA * temp_f24) - (arg7 * temp_f22);
+  cross1_x = (argA * temp_f24) - (arg7 * new_var4);
   up_y = new_var * cross1_x;
-  cross1_z = (arg8 * temp_f22) - (arg6 * temp_f20);
+  cross1_z = (arg8 * new_var4) - (arg6 * temp_f20);
   cross2_x = (argA * sp50) - (arg9 * temp_f12);
   cross2_y = (arg9 * sp48) - (argA * sp50);
   cross2_z = (arg8 * temp_f12) - (arg6 * sp48);
@@ -1036,7 +1039,8 @@
   up_x = (new_var * cross2_z) - (temp_f18 * cross2_y);
   temp_f18 = arg4 - arg9;
   sp48 = argA * temp_f24;
-  cross1_y = (arg7 * temp_f20) - sp48;
+  new_var3 = (arg7 * temp_f20) - sp48;
+  cross1_y = new_var3;
   up_y = (cross2_x * temp_f18) - (temp_f14 * cross2_z);
   up_z = (temp_f14 * cross2_y) - (cross2_x * cross2_x);
   up_y = up_y * up_y;
@@ -1058,9 +1062,9 @@
   arg1->wx = 0.0f;
   sp44++;
   sp44--;
+  arg1->xw = final_trans;
   arg1->wz = 0.0f;
   arg1->ww = 1.0f;
-  arg1->xw = final_trans;
   func_80047EE0(arg1, arg0);
 }
 
