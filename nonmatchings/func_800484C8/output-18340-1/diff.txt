--- before
+++ after
@@ -967,8 +967,8 @@
   f32 temp_f18;
   f32 temp_f12;
   f32 temp_f2;
+  f32 temp_f22;
   f32 temp_f20;
-  f32 temp_f22;
   f32 temp_f24;
   f32 temp_len;
   f32 cross1_x;
@@ -983,21 +983,23 @@
   f32 up_x;
   f32 up_y;
   f32 up_z;
+  f32 new_var;
   f32 final_trans;
   temp_f14 = arg2 - arg8;
   temp_f16 = arg3 - arg6;
   temp_f18 = arg4 - arg9;
   temp_len = ((temp_f14 * temp_f14) + (temp_f16 * temp_f16)) + (temp_f18 * temp_f18);
+  new_var = temp_f16;
   if (temp_len <= 0.0f)
   {
     return;
   }
   sp60 = temp_f14;
-  sp5C = temp_f16;
+  sp5C = new_var;
   sp58 = temp_f18;
   temp_len = sqrtf(temp_len);
   temp_f2 = 1.0f / temp_len;
-  temp_f22 = temp_f16;
+  temp_f22 = new_var;
   temp_f20 = temp_f14;
   temp_f24 = temp_f18;
   temp_f12 = temp_f22 * temp_f2;
@@ -1008,7 +1010,6 @@
   arg1->zx = sp50;
   sp3C = (((-arg2) * sp48) + (arg3 * temp_f12)) - (arg4 * sp50);
   cross1_x = (argA * temp_f24) - (arg7 * temp_f22);
-  cross1_y = (arg7 * temp_f20) - (argA * temp_f24);
   cross1_z = (arg8 * temp_f22) - (arg6 * temp_f20);
   cross2_x = (argA * sp50) - (arg9 * temp_f12);
   cross2_y = (arg9 * sp48) - (argA * sp50);
@@ -1026,12 +1027,14 @@
   arg1->xy = temp_f12;
   arg1->yy = sp3C;
   arg1->zy = sp44;
-  cross3_x = (temp_f16 * cross1_z) - (temp_f18 * cross1_y);
+  temp_f18 = cross1_z;
+  cross3_x = (new_var * temp_f18) - (temp_f18 * cross1_y);
   cross3_y = (temp_f18 * cross1_x) - (temp_f14 * cross1_z);
-  cross3_z = (temp_f14 * cross1_y) - (temp_f16 * cross1_x);
-  up_x = (temp_f16 * cross2_z) - (temp_f18 * cross2_y);
+  cross3_z = (temp_f14 * cross1_y) - (new_var * cross1_x);
+  up_x = (new_var * cross2_z) - (temp_f18 * cross2_y);
+  cross1_y = (arg7 * temp_f20) - (argA * temp_f24);
   up_y = (temp_f18 * cross2_x) - (temp_f14 * cross2_z);
-  up_z = (temp_f14 * cross2_y) - (temp_f16 * cross2_x);
+  up_z = (temp_f14 * cross2_y) - (new_var * cross2_x);
   temp_len = ((up_x * up_x) + (up_y * up_y)) + (up_z * up_z);
   if (temp_len <= 0.0f)
   {
