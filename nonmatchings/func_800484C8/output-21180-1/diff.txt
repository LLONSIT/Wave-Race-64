--- before
+++ after
@@ -953,6 +953,7 @@
 void func_800484C8(MF *arg0, MF *arg1, f32 arg2, f32 arg3, f32 arg4, f32 arg5, f32 arg6, f32 arg7, f32 arg8, f32 arg9, f32 argA)
 {
   f32 sp60;
+  float new_var;
   f32 sp5C;
   f32 sp58;
   f32 sp54;
@@ -968,6 +969,7 @@
   f32 temp_f12;
   f32 temp_f2;
   f32 temp_f20;
+  float new_var2;
   f32 temp_f22;
   f32 temp_f24;
   f32 temp_len;
@@ -995,8 +997,9 @@
   sp60 = temp_f14;
   sp5C = temp_f16;
   sp58 = temp_f18;
+  new_var2 = 1.0f;
   temp_len = sqrtf(temp_len);
-  temp_f2 = 1.0f / temp_len;
+  temp_f2 = new_var2 / temp_len;
   temp_f22 = temp_f16;
   temp_f20 = temp_f14;
   temp_f24 = temp_f18;
@@ -1019,7 +1022,7 @@
     return;
   }
   temp_len = sqrtf(temp_len);
-  temp_f2 = 1.0f / temp_len;
+  temp_f2 = new_var2 / temp_len;
   temp_f12 = cross1_y * temp_f2;
   sp3C = cross1_x * temp_f2;
   sp44 = cross1_z * temp_f2;
@@ -1027,7 +1030,8 @@
   arg1->yy = sp3C;
   arg1->zy = sp44;
   cross3_x = (temp_f16 * cross1_z) - (temp_f18 * cross1_y);
-  cross3_y = (temp_f18 * cross1_x) - (temp_f14 * cross1_z);
+  new_var = temp_f18 * cross1_x;
+  cross3_y = new_var - (temp_f14 * cross1_z);
   cross3_z = (temp_f14 * cross1_y) - (temp_f16 * cross1_x);
   up_x = (temp_f16 * cross2_z) - (temp_f18 * cross2_y);
   up_y = (temp_f18 * cross2_x) - (temp_f14 * cross2_z);
@@ -1049,7 +1053,7 @@
   arg1->wx = 0.0f;
   arg1->wy = 0.0f;
   arg1->wz = 0.0f;
-  arg1->ww = 1.0f;
+  arg1->ww = new_var2;
   arg1->xw = final_trans;
   func_80047EE0(arg1, arg0);
 }
