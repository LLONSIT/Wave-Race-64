--- before
+++ after
@@ -964,6 +964,7 @@
   f32 sp30;
   f32 temp_f14;
   f32 temp_f16;
+  float new_var2;
   f32 temp_f18;
   f32 temp_f12;
   f32 temp_f2;
@@ -972,6 +973,7 @@
   f32 temp_f24;
   f32 temp_len;
   f32 cross1_x;
+  f32 new_var;
   f32 cross1_y;
   f32 cross1_z;
   f32 cross2_x;
@@ -1005,13 +1007,14 @@
   sp50 = temp_f24 * temp_f2;
   arg1->yx = temp_f12;
   arg1->xx = sp48;
+  new_var2 = 1.0f;
   arg1->zx = sp50;
   sp3C = (((-arg2) * sp48) + (arg3 * temp_f12)) - (arg4 * sp50);
   cross1_x = (argA * temp_f24) - (arg7 * temp_f22);
   cross1_y = (arg7 * temp_f20) - (argA * temp_f24);
   cross1_z = (arg8 * temp_f22) - (arg6 * temp_f20);
   cross2_x = (argA * sp50) - (arg9 * temp_f12);
-  cross2_y = (arg9 * sp48) - (argA * sp50);
+  cross2_y = (cross1_y = arg9 * sp48) - (argA * sp50);
   cross2_z = (arg8 * temp_f12) - (arg6 * sp48);
   temp_len = ((cross1_x * cross1_x) + (cross1_y * cross1_y)) + (cross1_z * cross1_z);
   if (temp_len <= 0.0f)
@@ -1019,7 +1022,7 @@
     return;
   }
   temp_len = sqrtf(temp_len);
-  temp_f2 = 1.0f / temp_len;
+  temp_f2 = new_var2 / temp_len;
   temp_f12 = cross1_y * temp_f2;
   sp3C = cross1_x * temp_f2;
   sp44 = cross1_z * temp_f2;
@@ -1028,17 +1031,18 @@
   arg1->zy = sp44;
   cross3_x = (temp_f16 * cross1_z) - (temp_f18 * cross1_y);
   cross3_y = (temp_f18 * cross1_x) - (temp_f14 * cross1_z);
-  cross3_z = (temp_f14 * cross1_y) - (temp_f16 * cross1_x);
-  up_x = (temp_f16 * cross2_z) - (temp_f18 * cross2_y);
+  new_var = temp_f16;
+  cross3_z = (temp_f14 * cross1_y) - (new_var * cross1_x);
+  up_x = (new_var * cross2_z) - (temp_f18 * cross2_y);
   up_y = (temp_f18 * cross2_x) - (temp_f14 * cross2_z);
-  up_z = (temp_f14 * cross2_y) - (temp_f16 * cross2_x);
+  up_z = (temp_f14 * cross2_y) - (new_var * cross2_x);
   temp_len = ((up_x * up_x) + (up_y * up_y)) + (up_z * up_z);
   if (temp_len <= 0.0f)
   {
     return;
   }
   temp_len = sqrtf(temp_len);
-  temp_f2 = 1.0f / temp_len;
+  temp_f2 = new_var2 / temp_len;
   temp_f12 = cross3_y * temp_f2;
   temp_f14 = cross3_x * temp_f2;
   temp_f16 = cross3_z * temp_f2;
@@ -1047,9 +1051,9 @@
   arg1->zz = temp_f16;
   final_trans = (((-arg2) * temp_f14) + (arg3 * temp_f12)) - (arg4 * temp_f16);
   arg1->wx = 0.0f;
-  arg1->wy = 0.0f;
+  arg1->wy = .0f;
   arg1->wz = 0.0f;
-  arg1->ww = 1.0f;
+  arg1->ww = new_var2;
   arg1->xw = final_trans;
   func_80047EE0(arg1, arg0);
 }
