--- before
+++ after
@@ -1005,8 +1005,9 @@
   sp50 = temp_f24 * temp_f2;
   arg1->yx = temp_f12;
   arg1->xx = sp48;
+  cross2_z = arg3;
   arg1->zx = sp50;
-  sp3C = (((-arg2) * sp48) + (arg3 * temp_f12)) - (arg4 * sp50);
+  sp3C = (((-arg2) * sp48) + (cross2_z * temp_f12)) - (arg4 * sp50);
   cross1_x = (argA * temp_f24) - (arg7 * temp_f22);
   cross1_z = (arg8 * temp_f22) - (arg6 * temp_f20);
   cross2_x = (argA * sp50) - (arg9 * temp_f12);
@@ -1031,7 +1032,8 @@
   cross3_y = (temp_f18 * cross1_x) - (temp_f14 * cross1_z);
   cross3_z = (temp_f14 * cross1_y) - (new_var * cross1_x);
   up_x = (new_var * cross2_z) - (temp_f18 * cross2_y);
-  cross1_y = (arg7 * temp_f20) - (argA * temp_f24);
+  sp48 = argA * temp_f24;
+  cross1_y = (arg7 * temp_f20) - sp48;
   up_y = (temp_f18 * cross2_x) - (temp_f14 * cross2_z);
   up_z = (temp_f14 * cross2_y) - (cross2_x * cross2_x);
   temp_len = ((up_x * up_x) + (up_y * up_y)) + (up_z * up_z);
@@ -1047,8 +1049,10 @@
   arg1->xz = temp_f12;
   arg1->yz = temp_f14;
   arg1->zz = temp_f16;
-  final_trans = (((-arg2) * temp_f14) + (arg3 * temp_f12)) - (arg4 * temp_f16);
+  final_trans = (((-arg2) * temp_f14) + (cross2_z * temp_f12)) - (arg4 * temp_f16);
   arg1->wx = 0.0f;
+  sp44++;
+  sp44--;
   arg1->wy = 0.0f;
   arg1->wz = 0.0f;
   arg1->ww = 1.0f;
