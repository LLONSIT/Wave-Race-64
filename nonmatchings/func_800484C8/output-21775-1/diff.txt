--- before
+++ after
@@ -950,6 +950,7 @@
 } Vec3f;
 void func_800484C8(MF *arg0, MF *arg1, f32 arg2, f32 arg3, f32 arg4, f32 arg5, f32 arg6, f32 arg7, f32 arg8, f32 arg9, f32 argA)
 {
+  Vec3f new_var;
   Vec3f forward;
   Vec3f side;
   Vec3f up;
@@ -964,12 +965,13 @@
   }
   len = 1.0f / len;
   forward.x *= len;
+  new_var = side;
   forward.y *= len;
   forward.z *= len;
   side.x = (argA * forward.z) - (arg7 * forward.y);
   side.y = (arg7 * forward.x) - (arg5 * forward.z);
   side.z = (arg5 * forward.y) - (argA * forward.x);
-  len = sqrtf(((side.x * side.x) + (side.y * side.y)) + (side.z * side.z));
+  len = sqrtf(((new_var.x * new_var.x) + (new_var.y * new_var.y)) + (new_var.z * new_var.z));
   if (len <= 0.0f)
   {
     return;
@@ -978,24 +980,27 @@
   side.x *= len;
   side.y *= len;
   side.z *= len;
-  up.x = (forward.y * side.z) - (forward.z * side.y);
-  up.y = (forward.z * side.x) - (forward.x * side.z);
-  up.z = (forward.x * side.y) - (forward.y * side.x);
-  arg1->xx = side.x;
+  up.x = (forward.y * new_var.z) - (forward.z * new_var.y);
+  up.y = (forward.z * new_var.x) - (forward.x * new_var.z);
+  up.z = (forward.x * new_var.y) - (forward.y * new_var.x);
+  arg1->xx = new_var.x;
   arg1->yx = up.x;
   arg1->zx = -forward.x;
-  arg1->xy = side.y;
+  arg1->xy = new_var.y;
   arg1->yy = up.y;
   arg1->zy = -forward.y;
-  arg1->xz = side.z;
+  arg1->xz = new_var.z;
   arg1->yz = up.z;
   arg1->zz = -forward.z;
   arg1->wx = 0.0f;
   arg1->wy = 0.0f;
   arg1->wz = 0.0f;
   arg1->ww = 1.0f;
-  arg1->xw = -(((arg2 * side.x) + (arg3 * side.y)) + (arg4 * side.z));
+  arg1->xw = -(((arg2 * new_var.x) + (arg3 * new_var.y)) + (arg4 * new_var.z));
   arg1->yw = -(((arg2 * up.x) + (arg3 * up.y)) + (arg4 * up.z));
+  if ((arg6 && arg6) && arg6)
+  {
+  }
   arg1->zw = ((arg2 * forward.x) + (arg3 * forward.y)) + (arg4 * forward.z);
   func_80047EE0(arg1, arg0);
 }
